<launch>

	<!-- set arguement for if we're going to simulate the command post or not -->
	<arg name="connect_to_command_post" default="false"/>
	<param name="connect_to_command_post" value= "$(arg connect_to_command_post)" />

	<!-- set arguement for if we should simulate incoming artifact detections -->
	<arg name="simulating_artifact_detections" default="false"/>
	<param name="simulating_artifact_detections" value= "$(arg simulating_artifact_detections)" />

	<group if="$(arg simulating_artifact_detections)">
		<node pkg="basestation_gui_python" name="fake_artifact_detections" type="fake_artifact_detections.py" output="screen"/>
	</group>

	<!-- launch the interactive marker stuff -->
	<node pkg="basestation_gui_python" name="interactiveMarkerProcessing" type="interactiveMarkerProcessing.py" args = 'basic_controls' output="screen"/>

	<node pkg="basestation_gui_python" name="interactiveMarkerProcessingDefineWaypoint" type="interactiveMarkerProcessing.py" args = 'define_waypoint' output="screen"/>


	<!--launch the gui-->
    <node name="rqt_gui" pkg="rqt_gui" type="rqt_gui" args = '--perspective-file $(find basestation_gui_python)/config/subt_test_gui.perspective' output="screen" />

    <!--launch the darpa status monitor node-->
    <node name="darpaStatusMonitor" pkg="basestation_gui_python" type="darpaStatusMonitor.py" args = "$(find basestation_gui_python)/config/gui_params.yaml" output="screen" />

    <!-- Node to ahndle adding/deleting/managin artifacts -->
    <node pkg="basestation_gui_python" name="ArtifactHandler" type="ArtifactHandler.py" output="screen"/>

    <!-- Node to ahndle artifact subissions to DARPA -->
    <!-- <node pkg="basestation_gui_python" name="SubmissionHandler" type="SubmissionHandler.py" output="screen"/> -->

   

</launch>