---

# The robots section specifies how to configure each robot within the GUI and how
# it will communicate with the physical robot over the network.  Each robot is a
# composed of multiple properties where some are required and others are optional.
# Here is a complete robot example:
#
# -
#    name: [required] Name of the robot.  Doesn't have to be unique but probably
#          a good idea.
#
#    uuid: [required] Unique ID of the robot and once set it should never change.
#          To generate a UUID open a python prompt and then:
#              >>> import uuid
#              >>> str(uuid.uuid4())
##
#    has_comms: [optional] Can this robot drop comm nodes?  Influences UI.
#
#    is_aerial: [optional] Set to true if the robot is an aerial drone.
#
#    max_travel_time: [optional] Set to an integer for the max travel (flight) time
#                     the robot is allowed to be away from comms.  If not specified
#                     then the default is 10.
#
#    estop_serial_port: [required] Serial device to route DARPA hard E-Stop commands.
#    estop_engage:      [required] Command to engage the hard E-Stop on the DARPA serial port.
#    estop_disengage:   [required] Command to dis-engage the hard E-Stop on the DARPA serial port.
#
#    topic_prefix: [required] Name prefix to attach to pub/sub topics.  It would
#                  wise to have this be unique from other robots.
#
#    topics: [required] A dictionary that contains various topics to publish or
#            subscribe to in the UI.  Each topic will be prefixed by 'topic_prefix'.
#            Topics is expected to have the following keys.
#
#            odometry:       Subscription for the robot's odometry when defining a waypoint.
#            calibration:    Subscription for the robot's odometry when taking a calibration point.
#            darpa_tf:       Where to publish the DARPA transform after taking a calibration.
#            wifi_detection: Subscription to receive incoming detected artifact images via WIFI.
#            status_update:  Subscription to receive heath monitoring info from various nodes.
#            radio_command:  Where to publish outgoing radio command messages.
#            behavior_tree:  Subscription for the robot's current behavior tree in DOT GraphViz form.
#            point_cloud:    Subscription for the robot's 3D point cloud.
#            clear_cloud:    Publish a Float32 message to clear the robot's current terrain analysis.
#
robots:
  -
    name: Ground1
    uuid: df0a06b4-c247-4489-9869-9dedeb2d8b67
    has_comms: true
    max_travel_time: 10
    estop_serial_port: '/dev/ttyUSB0'
    estop_engage: '7E 00 10 17 01 00 7D 33 A2 00 41 90 89 B2 FF FE 02 44 31 04 AE'
    estop_disengage: '7E 00 10 17 01 00 7D 33 A2 00 41 90 89 B2 FF FE 02 44 31 05 AD'
    topic_prefix: ugv1
    topics:
      odometry: frame/integrated_to_map
      calibration: integrated_to_map
      darpa_tf: transform
      wifi_detection: frame/wifi_detection
      status_update: status_update
      radio_command: radio_command_bst
      behavior_tree: behavior_tree_graphviz_compressed
      point_cloud: frame/decode_global_cloud
      clear_cloud: cloud_clearing
  -
    name: Ground2
    uuid: eb6ec779-2d3a-4f9a-9bb0-e11a7ce8e501
    executive_id: 2
    has_comms: true
    max_travel_time: 10
    estop_serial_port: '/dev/ttyUSB0'
    estop_disengage: '7E 00 10 17 01 00 7D 33 A2 00 41 90 8A 87 FF FE 02 44 31 05 D7'
    estop_engage: '7E 00 10 17 01 00 7D 33 A2 00 41 90 8A 87 FF FE 02 44 31 04 D8'
    topic_prefix: ugv2
    topics:
      odometry: frame/integrated_to_map
      calibration: integrated_to_map
      darpa_tf: transform
      artifact_wifi: real_artifact_imgs
      artifact_radio: real_artifact_detections
      wifi_detection: frame/wifi_detection
      status_update: status_update
      radio_command: radio_command_bst
      behavior_tree: behavior_tree_graphviz_compressed
      point_cloud: frame/decode_global_cloud
      clear_cloud: cloud_clearing
  -
    name: Aerial1
    uuid: 1c9f02d3-14af-4bdc-9840-77d1ba279c4e
    is_aerial: true
    max_travel_time: 10
    estop_serial_port: '/dev/ttyUSB0'
    estop_disengage: '7E 00 10 17 AB 00 13 A2 00 40 DA 8F E1 FF FE 02 44 30 04 87'
    estop_engage: '7E 00 10 17 01 00 13 A2 00 41 90 8A 87 FF FE 02 44 31 05 D7'
    topic_prefix: uav1
    topics:
      odometry: frame/integrated_to_map
      calibration: integrated_to_map
      darpa_tf: transform
      wifi_detection: frame/wifi_detection
      status_update: status_update
      radio_command: radio_command_bst
      behavior_tree: behavior_tree_graphviz_compressed
      point_cloud: frame/decode_global_cloud
      clear_cloud: cloud_clearing


# The DARPA section specifies how the GUI should communicate with the remote
# DARPA scoring server.
#
#    score_address:       [required] IP address with protocol of the remote DARPA server to get status and send artifact reports.
#    score_port:          [required] Port number of the remote DARPA server to get status and send artifact reports.
#    score_bearer_token:  [required] Authentication token to communicate with the DARPA server to get status and send artifact reports.
#    score_status_uri:    [required] URI to GET the current DARPA score status.
#    score_report_uri:    [required] URI to POST artifact reports to DARPA.
#    map_address:         [required] IP address with protocol of the remote DARPA server to send map information.
#    map_port:            [required] Port number of the remote DARPA server to send map information.
#    map_bearer_token:    [required] Authentication token to communicate with the DARPA server to send map information.
#    map_cloud_uris:      [required] URI to POST point cloud information to DARPA.
#    map_pose_uris:       [required] URI to POST robot positions to DARPA.
#    artifact_categories: [required] Various artifact categories that any robot should report.
#
darpa:
  score_address: 'http://127.0.0.1'
  score_port: 8080
  score_bearer_token: 'flux230{showroom'
  score_status_uri: '/api/status/'
  score_report_uri: '/api/artifact_reports/'
  map_address: 'http://127.0.0.1'
  map_port: 8080
  map_bearer_token: 'flux230{showroom'
  map_cloud_uri: '/map/update/'
  map_pose_uri: '/state/update/'
  artifact_categories:
    - Backpack
    - Cell Phone
    - Drill
    - Fire Extinguisher
    - Survivor
